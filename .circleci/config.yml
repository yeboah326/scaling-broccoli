# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  destroy_environment:
    steps:
        - run:
            name: Destroy environment
            command: |
              aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:  
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1
  #       - run:
  #           name: Take the public IP address of the ec2 instance from AWS
  #           command: |
  #             aws ec2 describe-instances \
  #             \
  #                   --query 'Reservations[*].Instances[*].PublicIpAddress' \
  #                   --filters "Name=tag:Project,Values=udacity" \
  #                   --output text >> inventory
  #       - run:
  #           name: Print out the contents of inventory
  #           command: |
  #             cat inventory

  # configure_infrastructure: 
  #     docker:
  #       - image: python:3.8-alpine3.16
  #     steps:
  #       - checkout
  #       - add_ssh_keys:
  #               fingerprints: ["be:bf:a7:17:04:5b:82:e4:68:cc:6b:73:16:64:32:22"] 
  #       - run: 
  #           name: Install dependencies
  #           command: |
  #             apk add --update openssh-server
  #       - run:
  #           name: Install Ansible
  #           command: |
  #             apk add --update ansible
  #       - run:
  #           name: Run Playbook and Configure server
  #           command: |
  #             ansible-playbook main.yml -i inventory
  
  smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run:
            name: Install curl
            command: |
              apk add --update curl
        - run:
            name: Perform failed smoke tests
            command: |
              if curl -s --head "https://blog.udacity.com/%22"
              then
                return 1
              else
                return 0
              fi
        - run:
            name: Destroy environment
            command: destroy_environment
            when: on_fail

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  project-udacity-workflow:
    jobs:
      # - create_infrastructure
      # - configure_infrastructure
          # requires:
          #   - create_infrastructure
      - create_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure